# production mode server url
gaship-server.auth-url=http://192.168.0.30:7071
gaship-server.payments-url=http://192.168.0.57:7073
gaship-server.scheduler-url=http://192.168.0.74:7074
gaship-server.coupon-url=http://192.168.0.80:7075

eggplant-server.delivery-url=http://eggplant.marketgg.shop
eggplant-target.success-url=https://gaship.shop

# database setting
datasource.driverClassName=com.mysql.cj.jdbc.Driver
datasource.url=ebe51670ba0d496a99900c5b0e4d1459
datasource.username=gaship
datasource.password=876b9add24b943869830b1919a7525ab

# (core count)N * 2 + 1
spring.datasource.hikari.maximum-pool-size=5

# production resources path
file.upload.url=/home/gaship/upload

# jpa dialect config
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# elastic search config
elasticsearch.index=gaship-product

#logging 정식 배포 떄는 level을 warn으로 둬야함.
logging.level.org.springframework.web=debug
logging.level.org.hibernate=debug
logging.level.shop.gaship.gashipshoppingmall=debug
logging.level.root=debug
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.max-file-size=5MB
logging.logback.rollingpolicy.file-name-pattern=/home/ubuntu/shopping-logging/shopping-log-%d{yyyy-MM-dd}.%i.log
logging.file.path=/home/ubuntu/shopping-logging
logging.file.name=/home/ubuntu/shopping-logging/shopping-log.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %logger{36} - %msg%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %logger{36} - %msg%n
logging.charset.file=UTF-8
logging.charset.console=UTF-8

# 정식 배포 떄는 지워야함
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type.descriptor.sql=trace
